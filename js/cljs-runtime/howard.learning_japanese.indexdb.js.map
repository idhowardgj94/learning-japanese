{"version":3,"sources":["howard/learning_japanese/indexdb.cljs"],"mappings":"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","names":["howard.learning-japanese.indexdb/db","cljs.core.atom","howard.learning-japanese.indexdb/ds-db","howard.learning-japanese.indexdb/to-js-obj","m","cljs.core/clj->js","howard.learning-japanese.indexdb/handle-upgrade","event","js/console.log","indexed.db/create-version-change-event","indexed.db/get-request","indexed.db/result","indexed.db/create-database","indexed.db.create_object_store","indexed.db.create_index","howard.learning-japanese.indexdb/handle-success","idb","cljs.core/reset!","howard.learning-japanese.indexdb/sync-words-data","re-frame.core/dispatch","ajax.core.GET","response","cljs.core/deref","data","cljs.reader.read_string","tx","indexed.db.transaction","store","indexed.db.object_store","seq__54203","cljs.core/seq","chunk__54204","count__54205","i__54206","temp__5753__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","it","indexed.db.put","howard.learning-japanese.indexdb/setup-memory-db","howard.learning-japanese.indexdb/wait-db-done","timeout","js/Promise","res","js/setInterval","js/clearTimeout","howard.learning-japanese.indexdb/init-indexdb","indexed.db.open","$","indexed.db.on","howard.learning-japanese.indexdb/data","cljs.core/transient","howard.learning-japanese.indexdb/get-words-data","c__36062__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__36063__auto__","switch__35946__auto__","state_54251","state_val_54252","inst_54211","inst_54212","cljs.core/PersistentVector","inst_54213","inst_54215","inst_54216","cljs.core/PersistentHashMap","inst_54217","inst_54219","inst_54220","cljs.core.async.interop/p->c","statearr-54253","cljs.core.async.impl.ioc-helpers/take!","inst_54223","inst_54222","cljs.core/ExceptionInfo","statearr-54256","statearr-54257","statearr-54258","inst_54225","cljs.core/ex-data","inst_54226","inst_54227","cljs.core._EQ_","statearr-54259","statearr-54260","inst_54230","statearr-54261","statearr-54262","inst_54232","statearr-54264","statearr-54265","inst_54235","inst_54236","inst_54237","inst_54238","inst_54239","inst_54240","inst_54241","inst_54242","inst_54243","inst_54244","inst_54245","inst_54246","inst_54247","statearr-54270","cljs.core.async.impl.ioc-helpers/return-chan","statearr-54271","state-machine__35947__auto__","ret-value__35948__auto__","result__35949__auto__","cljs.core/keyword-identical?","ex__35950__auto__","e54272","statearr-54273","statearr-54274","state__36064__auto__","statearr-54275","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","_","trans","indexed.db.open_cursor","e","cursor","indexed.db/create-request","cljs.core.swap_BANG_","p__54266","map__54267","cljs.core/--destructure-map","cljs.core.get","cljs.core/persistent!","p__54268","map__54269","val","indexed.db/create-cursor-with-value","indexed.db/value","cljs.core.js__GT_clj","cljs.core.conj_BANG_","indexed.db.continue$","howard.learning-japanese.indexdb/setup-datascript","conn","datascript.core.create_conn","datascript.core.transact_BANG_","howard.learning-japanese.indexdb/get-ds-db"],"sourcesContent":["(ns howard.learning-japanese.indexdb\n  (:require [indexed.db :as db]\n            [howard.learning-japanese.events :as event]\n            [re-frame.core :as re-frame]\n            [cljs.core.async :refer [go]]\n            [cljs.core.async.interop :refer [<p!]]\n            [ajax.core :refer [GET]]\n            [datascript.core :as d]\n            [cljs.reader :refer [read-string]]\n            [howard.learning-japanese.events :as events]))\n\n(def db (atom nil))\n(def ds-db (atom nil))\n(declare get-words-data)\n(declare setup-memory-db)\n\n(defn to-js-obj\n  [m]\n  (clj->js m))\n\n(defn handle-upgrade\n  \"handle upgrade db version\n  current version is 1\"\n  [event]\n  (js/console.log \"inside handle-upgrade\")\n  (-> (db/create-version-change-event event)\n      (db/get-request)\n      (db/result)\n      (db/create-database)\n      (db/create-object-store \"words\" {:key-path \"id\" :auto-increment true})\n      (db/create-index \"chinese\" \"chinese\" {:unique false})))\n\n(defn handle-success\n  \"handle indexdb success open\"\n  [event idb]\n  (js/console.log \"inside handle-success\" event)\n  (reset! db idb))\n\n(defn sync-words-data\n  []\n  (re-frame/dispatch [::events/set-app-status :get-words-data])\n  (GET \"words.edn\"\n    {:handler (fn [response]\n                (js/console.log @db)\n                (let [data (read-string response)\n                      tx (-> @db\n                             (db/result)\n                             (db/create-database)\n                             (db/transaction [\"words\"] \"readwrite\"))\n                      store (db/object-store tx \"words\")]\n                  (doseq [it data]\n                    (js/console.log \"insert: \" (to-js-obj it))\n                    (db/put store (to-js-obj it))))\n                (setup-memory-db))}))\n\n(defn wait-db-done\n  \"wait for db done\"\n  []\n  (let [timeout (atom nil)]\n    (js/Promise. (fn [res]\n                   (reset! timeout (js/setInterval\n                                    (fn []\n                                      (when-not (nil? @db)\n                                        (js/clearTimeout @timeout)\n                                        (res nil))) 1000))))))\n\n(defn init-indexdb\n  \"init and open indexdb\"\n  []\n  (js/console.log \"init index db 'learning-jpaanese' v1...\")\n  (as-> (db/open \"learning-japanese\" 1) $\n    (db/on $ \"error\" (fn [event] (js/console.log \"inside error\" event)))\n    (db/on $ \"blocked\" (fn [event] (js/console.log \"inside blocked\" event)))\n    (db/on $ \"upgradeneeded\" handle-upgrade)\n    (db/on $ \"success\" (fn [event] (handle-success event $)))))\n\n(def data (atom {:data  (transient [])\n                 :status :none}))\n(defn get-words-data\n  \"get words form indexdb.\"\n  []\n  (go\n    (reset! data {:data (transient [])\n                  :status :none})\n\n    (let [_ (<p! (wait-db-done))\n          trans (-> @db\n                    (db/result)\n                    (db/create-database)\n                    (db/transaction [\"words\"] \"readwrite\"))\n          store (db/object-store trans \"words\")]\n      (js/console.log \"get data out of indexdb..\")\n      (-> (db/open-cursor store)\n          (db/on \"success\"\n                 (fn [e]\n                   (let [cursor (-> (.-target e)\n                                    (db/create-request)\n                                    (db/result))]\n                     (if (nil? cursor)\n                       (swap! data (fn [{:keys [data]}]\n                                     {:status :success\n                                      :data (persistent! data)}))\n                       (do (swap! data (fn [{:keys [data]}]\n                                         (let [val (-> (db/create-cursor-with-value cursor)\n                                                       (db/value)\n                                                       (js->clj :keywordize-keys true))]\n                                           {:status :loading\n                                            :data   (conj! data val)})))\n\n                           (-> (db/create-cursor-with-value cursor)\n                               (db/continue)))))))))))\n\n(defn setup-datascript\n  \"setup datascript db\n  need to wait until data atom done\"\n  []\n  (let [conn (d/create-conn)]\n    (d/transact! conn (:data @data))\n    conn))\n\n(defn setup-memory-db\n  \"setup memory db from indexdb, and store it into ds-db\n  wont sync indexdb data\n  \"\n  []\n  (re-frame/dispatch [::events/set-app-status ::init])\n  (init-indexdb)\n  (get-words-data)\n  (let [timeout (atom nil)]\n    (reset! timeout (js/setInterval\n                     (fn []\n                       (when (= (:status @data) :success)\n                         (js/console.log \"indexdb setup finish\")\n                         (reset! ds-db (setup-datascript))\n                         (re-frame/dispatch [::events/set-app-status :finish])\n                         (js/clearTimeout @timeout))) 1000))))\n\n(defn get-ds-db\n  \"get datascript db\"\n  []\n  @@ds-db)\n"]}