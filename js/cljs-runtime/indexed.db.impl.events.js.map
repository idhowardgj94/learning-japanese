{"version":3,"sources":["indexed/db/impl/events.cljs"],"mappings":"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","names":["cljs.core/PROTOCOL_SENTINEL","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","indexed.db.impl.events/VersionChangeEvent","indexed.db.impl.events/->VersionChangeEvent","js-event","_","indexed.db.impl.events/version-change-event?","x","cljs.core/native-satisfies?","indexed.db.impl.protocols/IDBVersionChangeEvent","indexed.db.impl.events/create-version-change-event","indexed.db.impl.events/new-version","version-change-event","indexed.db.impl.protocols/new-version","indexed.db.impl.events/old-version","indexed.db.impl.protocols/old-version","var_args","G__45076","indexed.db.impl.events/on","js/Error","event-target","type","listener","indexed.db.impl.protocols/target","options","cljs.core/clj->js","G__45083","indexed.db.impl.events/off","indexed.db.impl.events/event-target?","indexed.db.impl.protocols/EventTarget"],"sourcesContent":["(ns ^:no-doc indexed.db.impl.events\n  (:require [indexed.db.impl.protocols :as impl]))\n\n(deftype VersionChangeEvent [js-event]\n  impl/IDBVersionChangeEvent\n  (new-version [_] (.-newVersion js-event))\n  (old-version [_] (.-oldVersion js-event))\n\n  impl/BelongsToRequest\n  (idb-request [_] (.-target js-event)))\n\n(defn version-change-event?\n  [x]\n  (satisfies? impl/IDBVersionChangeEvent x))\n\n(defn create-version-change-event\n  [js-event]\n  (VersionChangeEvent. js-event))\n\n(defn new-version\n  [version-change-event]\n  (impl/new-version version-change-event))\n\n(defn old-version\n  [version-change-event]\n  (impl/old-version version-change-event))\n\n(defn on\n  ([event-target type listener]\n   (.addEventListener (impl/target event-target) type listener)\n   event-target)\n  ([event-target type listener options]\n   (.addEventListener (impl/target event-target) type listener (clj->js options))\n   event-target))\n\n(defn off\n  ([event-target type listener]\n   (.removeEventListener (impl/target event-target) type listener)\n   event-target)\n  ([event-target type listener options]\n   (.removeEventListener (impl/target event-target) type listener (clj->js options))\n   event-target))\n\n(defn event-target?\n  [x]\n  (satisfies? impl/EventTarget x))\n"]}