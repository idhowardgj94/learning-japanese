shadow$provide.module$node_modules$$mui$material$node$Tabs$Tabs=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===
obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=
obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _objectWithoutPropertiesLoose2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")),_extends2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")),
React=_interopRequireWildcard(require("module$node_modules$react$index")),_reactIs=require("module$node_modules$react_is$index");global=_interopRequireDefault(require("module$node_modules$prop_types$index"));var _clsx=_interopRequireDefault(require("module$node_modules$clsx$dist$clsx"));module=require("module$node_modules$$mui$utils$index");var _base=require("module$node_modules$$mui$base$node$index"),_styled=_interopRequireDefault(require("module$node_modules$$mui$material$node$styles$styled")),
_useThemeProps=_interopRequireDefault(require("module$node_modules$$mui$material$node$styles$useThemeProps")),_useTheme=_interopRequireDefault(require("module$node_modules$$mui$material$node$styles$useTheme")),_debounce=_interopRequireDefault(require("module$node_modules$$mui$material$node$utils$debounce")),_scrollLeft=require("module$node_modules$$mui$material$node$utils$scrollLeft"),_animate=_interopRequireDefault(require("module$node_modules$$mui$material$node$internal$animate")),_ScrollbarSize=
_interopRequireDefault(require("module$node_modules$$mui$material$node$Tabs$ScrollbarSize")),_TabScrollButton=_interopRequireDefault(require("module$node_modules$$mui$material$node$TabScrollButton$index")),_useEventCallback=_interopRequireDefault(require("module$node_modules$$mui$material$node$utils$useEventCallback")),_tabsClasses=_interopRequireWildcard(require("module$node_modules$$mui$material$node$Tabs$tabsClasses")),_ownerDocument=_interopRequireDefault(require("module$node_modules$$mui$material$node$utils$ownerDocument")),
_ownerWindow=_interopRequireDefault(require("module$node_modules$$mui$material$node$utils$ownerWindow")),_jsxRuntime=require("module$node_modules$react$jsx_runtime");const _excluded="aria-label aria-labelledby action centered children className component allowScrollButtonsMobile indicatorColor onChange orientation ScrollButtonComponent scrollButtons selectionFollowsFocus TabIndicatorProps TabScrollButtonProps textColor value variant visibleScrollbar".split(" "),nextItem=(list,item)=>list===item?list.firstChild:
item&&item.nextElementSibling?item.nextElementSibling:list.firstChild,previousItem=(list,item)=>list===item?list.lastChild:item&&item.previousElementSibling?item.previousElementSibling:list.lastChild,moveFocus=(list,currentFocus,traversalFunction)=>{let wrappedOnce=!1;for(currentFocus=traversalFunction(list,currentFocus);currentFocus;){if(currentFocus===list.firstChild){if(wrappedOnce)break;wrappedOnce=!0}const nextFocusDisabled=currentFocus.disabled||"true"===currentFocus.getAttribute("aria-disabled");
if(!currentFocus.hasAttribute("tabindex")||nextFocusDisabled)currentFocus=traversalFunction(list,currentFocus);else{currentFocus.focus();break}}},useUtilityClasses=ownerState=>{const {vertical,fixed,hideScrollbar,scrollableX,scrollableY,centered,scrollButtonsHideMobile,classes}=ownerState;return(0,_base.unstable_composeClasses)({root:["root",vertical&&"vertical"],scroller:["scroller",fixed&&"fixed",hideScrollbar&&"hideScrollbar",scrollableX&&"scrollableX",scrollableY&&"scrollableY"],flexContainer:["flexContainer",
vertical&&"flexContainerVertical",centered&&"centered"],indicator:["indicator"],scrollButtons:["scrollButtons",scrollButtonsHideMobile&&"scrollButtonsHideMobile"],scrollableX:[scrollableX&&"scrollableX"],hideScrollbar:[hideScrollbar&&"hideScrollbar"]},_tabsClasses.getTabsUtilityClass,classes)},TabsRoot=(0,_styled.default)("div",{name:"MuiTabs",slot:"Root",overridesResolver:(props,styles)=>{({ownerState:props}=props);return[{[`& .${_tabsClasses.default.scrollButtons}`]:styles.scrollButtons},{[`& .${_tabsClasses.default.scrollButtons}`]:props.scrollButtonsHideMobile&&
styles.scrollButtonsHideMobile},styles.root,props.vertical&&styles.vertical]}})(({ownerState,theme})=>(0,_extends2.default)({overflow:"hidden",minHeight:48,WebkitOverflowScrolling:"touch",display:"flex"},ownerState.vertical&&{flexDirection:"column"},ownerState.scrollButtonsHideMobile&&{[`& .${_tabsClasses.default.scrollButtons}`]:{[theme.breakpoints.down("sm")]:{display:"none"}}})),TabsScroller=(0,_styled.default)("div",{name:"MuiTabs",slot:"Scroller",overridesResolver:(props,styles)=>{({ownerState:props}=
props);return[styles.scroller,props.fixed&&styles.fixed,props.hideScrollbar&&styles.hideScrollbar,props.scrollableX&&styles.scrollableX,props.scrollableY&&styles.scrollableY]}})(({ownerState})=>(0,_extends2.default)({position:"relative",display:"inline-block",flex:"1 1 auto",whiteSpace:"nowrap"},ownerState.fixed&&{overflowX:"hidden",width:"100%"},ownerState.hideScrollbar&&{scrollbarWidth:"none","\x26::-webkit-scrollbar":{display:"none"}},ownerState.scrollableX&&{overflowX:"auto",overflowY:"hidden"},
ownerState.scrollableY&&{overflowY:"auto",overflowX:"hidden"})),FlexContainer=(0,_styled.default)("div",{name:"MuiTabs",slot:"FlexContainer",overridesResolver:(props,styles)=>{({ownerState:props}=props);return[styles.flexContainer,props.vertical&&styles.flexContainerVertical,props.centered&&styles.centered]}})(({ownerState})=>(0,_extends2.default)({display:"flex"},ownerState.vertical&&{flexDirection:"column"},ownerState.centered&&{justifyContent:"center"})),TabsIndicator=(0,_styled.default)("span",
{name:"MuiTabs",slot:"Indicator",overridesResolver:(props,styles)=>styles.indicator})(({ownerState,theme})=>(0,_extends2.default)({position:"absolute",height:2,bottom:0,width:"100%",transition:theme.transitions.create()},"primary"===ownerState.indicatorColor&&{backgroundColor:(theme.vars||theme).palette.primary.main},"secondary"===ownerState.indicatorColor&&{backgroundColor:(theme.vars||theme).palette.secondary.main},ownerState.vertical&&{height:"100%",width:2,right:0})),TabsScrollbarSize=(0,_styled.default)(_ScrollbarSize.default,
{name:"MuiTabs",slot:"ScrollbarSize"})({overflowX:"auto",overflowY:"hidden",scrollbarWidth:"none","\x26::-webkit-scrollbar":{display:"none"}}),defaultIndicatorStyle={};let warnedOnceTabPresent=!1;require=React.forwardRef(function(inProps,ref){var props=(0,_useThemeProps.default)({props:inProps,name:"MuiTabs"});const theme=(0,_useTheme.default)(),isRtl="rtl"===theme.direction,{"aria-label":ariaLabel,"aria-labelledby":ariaLabelledBy,action,centered=!1,children:childrenProp,className,component="div",
allowScrollButtonsMobile=!1,indicatorColor="primary",onChange,orientation="horizontal",ScrollButtonComponent=_TabScrollButton.default,scrollButtons="auto",selectionFollowsFocus,TabIndicatorProps={},TabScrollButtonProps={},textColor="primary",value,variant="standard",visibleScrollbar=!1}=props;inProps=(0,_objectWithoutPropertiesLoose2.default)(props,_excluded);const scrollable="scrollable"===variant,vertical="vertical"===orientation,scrollStart=vertical?"scrollTop":"scrollLeft",start=vertical?"top":
"left",end=vertical?"bottom":"right",clientSize=vertical?"clientHeight":"clientWidth",size=vertical?"height":"width";props=(0,_extends2.default)({},props,{component,allowScrollButtonsMobile,indicatorColor,orientation,vertical,scrollButtons,textColor,variant,visibleScrollbar,fixed:!scrollable,hideScrollbar:scrollable&&!visibleScrollbar,scrollableX:scrollable&&!vertical,scrollableY:scrollable&&vertical,centered:centered&&!scrollable,scrollButtonsHideMobile:!allowScrollButtonsMobile});const classes=
useUtilityClasses(props);centered&&scrollable&&console.error('MUI: You can not use the `centered\x3d{true}` and `variant\x3d"scrollable"` properties at the same time on a `Tabs` component.');const [mounted,setMounted]=React.useState(!1),[indicatorStyle,setIndicatorStyle]=React.useState(defaultIndicatorStyle),[displayScroll,setDisplayScroll]=React.useState({start:!1,end:!1}),[scrollerStyle,setScrollerStyle]=React.useState({overflow:"hidden",scrollbarWidth:0}),valueToIndex=new Map,tabsRef=React.useRef(null),
tabListRef=React.useRef(null),getTabsMeta=()=>{var tabsNode=tabsRef.current;if(tabsNode){var tabsMeta=tabsNode.getBoundingClientRect();tabsMeta={clientWidth:tabsNode.clientWidth,scrollLeft:tabsNode.scrollLeft,scrollTop:tabsNode.scrollTop,scrollLeftNormalized:(0,_scrollLeft.getNormalizedScrollLeft)(tabsNode,theme.direction),scrollWidth:tabsNode.scrollWidth,top:tabsMeta.top,bottom:tabsMeta.bottom,left:tabsMeta.left,right:tabsMeta.right}}var tabMeta;tabsNode&&!1!==value&&(tabsNode=tabListRef.current.children,
0<tabsNode.length&&((tabMeta=tabsNode[valueToIndex.get(value)])||console.error(["MUI: The `value` provided to the Tabs component is invalid.",`None of the Tabs' children match with "${value}".`,valueToIndex.keys?`You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(", ")}.`:null].join("\n")),tabMeta=tabMeta?tabMeta.getBoundingClientRect():null,!warnedOnceTabPresent&&tabMeta&&0===tabMeta.width&&0===tabMeta.height&&0!==tabsMeta.clientWidth&&(tabsMeta=null,console.error(["MUI: The `value` provided to the Tabs component is invalid.",
`The Tab with this \`value\` ("${value}") is not part of the document layout.`,"Make sure the tab item is present in the document or that it's not `display: none`."].join("\n")),warnedOnceTabPresent=!0)));return{tabsMeta,tabMeta}},updateIndicatorState=(0,_useEventCallback.default)(()=>{const {tabsMeta,tabMeta}=getTabsMeta();var startValue=0;let startIndicator;vertical?(startIndicator="top",tabMeta&&tabsMeta&&(startValue=tabMeta.top-tabsMeta.top+tabsMeta.scrollTop)):(startIndicator=isRtl?"right":"left",
tabMeta&&tabsMeta&&(startValue=(isRtl?-1:1)*(tabMeta[startIndicator]-tabsMeta[startIndicator]+(isRtl?tabsMeta.scrollLeftNormalized+tabsMeta.clientWidth-tabsMeta.scrollWidth:tabsMeta.scrollLeft))));startValue={[startIndicator]:startValue,[size]:tabMeta?tabMeta[size]:0};if(isNaN(indicatorStyle[startIndicator])||isNaN(indicatorStyle[size]))setIndicatorStyle(startValue);else{const dSize=Math.abs(indicatorStyle[size]-startValue[size]);(1<=Math.abs(indicatorStyle[startIndicator]-startValue[startIndicator])||
1<=dSize)&&setIndicatorStyle(startValue)}}),scroll=(scrollValue,{animation=!0}={})=>{animation?(0,_animate.default)(scrollStart,tabsRef.current,scrollValue,{duration:theme.transitions.duration.standard}):tabsRef.current[scrollStart]=scrollValue},moveTabsScroll=delta=>{let scrollValue=tabsRef.current[scrollStart];vertical?scrollValue+=delta:(scrollValue+=delta*(isRtl?-1:1),scrollValue*=isRtl&&"reverse"===(0,_scrollLeft.detectScrollType)()?-1:1);scroll(scrollValue)},getScrollSize=()=>{const containerSize=
tabsRef.current[clientSize];let totalSize=0;const children=Array.from(tabListRef.current.children);for(let i=0;i<children.length;i+=1){const tab=children[i];if(totalSize+tab[clientSize]>containerSize){0===i&&(totalSize=containerSize);break}totalSize+=tab[clientSize]}return totalSize},handleStartScrollClick=()=>{moveTabsScroll(-1*getScrollSize())},handleEndScrollClick=()=>{moveTabsScroll(getScrollSize())},handleScrollbarSizeChange=React.useCallback(scrollbarWidth=>{setScrollerStyle({overflow:null,
scrollbarWidth})},[]),scrollSelectedIntoView=(0,_useEventCallback.default)(animation=>{const {tabsMeta,tabMeta}=getTabsMeta();tabMeta&&tabsMeta&&(tabMeta[start]<tabsMeta[start]?scroll(tabsMeta[scrollStart]+(tabMeta[start]-tabsMeta[start]),{animation}):tabMeta[end]>tabsMeta[end]&&scroll(tabsMeta[scrollStart]+(tabMeta[end]-tabsMeta[end]),{animation}))}),updateScrollButtonState=(0,_useEventCallback.default)(()=>{if(scrollable&&!1!==scrollButtons){const {scrollTop,scrollHeight,clientHeight,scrollWidth,
clientWidth}=tabsRef.current;let showStartScroll;if(vertical){showStartScroll=1<scrollTop;var showEndScroll=scrollTop<scrollHeight-clientHeight-1}else showEndScroll=(0,_scrollLeft.getNormalizedScrollLeft)(tabsRef.current,theme.direction),showStartScroll=isRtl?showEndScroll<scrollWidth-clientWidth-1:1<showEndScroll,showEndScroll=isRtl?1<showEndScroll:showEndScroll<scrollWidth-clientWidth-1;showStartScroll===displayScroll.start&&showEndScroll===displayScroll.end||setDisplayScroll({start:showStartScroll,
end:showEndScroll})}});React.useEffect(()=>{const handleResize=(0,_debounce.default)(()=>{tabsRef.current&&(updateIndicatorState(),updateScrollButtonState())}),win=(0,_ownerWindow.default)(tabsRef.current);win.addEventListener("resize",handleResize);let resizeObserver;"undefined"!==typeof ResizeObserver&&(resizeObserver=new ResizeObserver(handleResize),Array.from(tabListRef.current.children).forEach(child=>{resizeObserver.observe(child)}));return()=>{handleResize.clear();win.removeEventListener("resize",
handleResize);resizeObserver&&resizeObserver.disconnect()}},[updateIndicatorState,updateScrollButtonState]);const handleTabsScroll=React.useMemo(()=>(0,_debounce.default)(()=>{updateScrollButtonState()}),[updateScrollButtonState]);React.useEffect(()=>()=>{handleTabsScroll.clear()},[handleTabsScroll]);React.useEffect(()=>{setMounted(!0)},[]);React.useEffect(()=>{updateIndicatorState();updateScrollButtonState()});React.useEffect(()=>{scrollSelectedIntoView(defaultIndicatorStyle!==indicatorStyle)},[scrollSelectedIntoView,
indicatorStyle]);React.useImperativeHandle(action,()=>({updateIndicator:updateIndicatorState,updateScrollButtons:updateScrollButtonState}),[updateIndicatorState,updateScrollButtonState]);const indicator=(0,_jsxRuntime.jsx)(TabsIndicator,(0,_extends2.default)({},TabIndicatorProps,{className:(0,_clsx.default)(classes.indicator,TabIndicatorProps.className),ownerState:props,style:(0,_extends2.default)({},indicatorStyle,TabIndicatorProps.style)}));let childIndex=0;const children$jscomp$0=React.Children.map(childrenProp,
child=>{if(!React.isValidElement(child))return null;(0,_reactIs.isFragment)(child)&&console.error("MUI: The Tabs component doesn't accept a Fragment as a child.\nConsider providing an array instead.");const childValue=void 0===child.props.value?childIndex:child.props.value;valueToIndex.set(childValue,childIndex);const selected=childValue===value;childIndex+=1;return React.cloneElement(child,(0,_extends2.default)({fullWidth:"fullWidth"===variant,indicator:selected&&!mounted&&indicator,selected,selectionFollowsFocus,
onChange,textColor,value:childValue},1!==childIndex||!1!==value||child.props.tabIndex?{}:{tabIndex:0}))}),conditionalElements=(()=>{const conditionalElements={};conditionalElements.scrollbarSizeListener=scrollable?(0,_jsxRuntime.jsx)(TabsScrollbarSize,{onChange:handleScrollbarSizeChange,className:(0,_clsx.default)(classes.scrollableX,classes.hideScrollbar)}):null;var scrollButtonsActive=displayScroll.start||displayScroll.end;scrollButtonsActive=scrollable&&("auto"===scrollButtons&&scrollButtonsActive||
!0===scrollButtons);conditionalElements.scrollButtonStart=scrollButtonsActive?(0,_jsxRuntime.jsx)(ScrollButtonComponent,(0,_extends2.default)({orientation,direction:isRtl?"right":"left",onClick:handleStartScrollClick,disabled:!displayScroll.start},TabScrollButtonProps,{className:(0,_clsx.default)(classes.scrollButtons,TabScrollButtonProps.className)})):null;conditionalElements.scrollButtonEnd=scrollButtonsActive?(0,_jsxRuntime.jsx)(ScrollButtonComponent,(0,_extends2.default)({orientation,direction:isRtl?
"left":"right",onClick:handleEndScrollClick,disabled:!displayScroll.end},TabScrollButtonProps,{className:(0,_clsx.default)(classes.scrollButtons,TabScrollButtonProps.className)})):null;return conditionalElements})();return(0,_jsxRuntime.jsxs)(TabsRoot,(0,_extends2.default)({className:(0,_clsx.default)(classes.root,className),ownerState:props,ref,as:component},inProps,{children:[conditionalElements.scrollButtonStart,conditionalElements.scrollbarSizeListener,(0,_jsxRuntime.jsxs)(TabsScroller,{className:classes.scroller,
ownerState:props,style:{overflow:scrollerStyle.overflow,[vertical?`margin${isRtl?"Left":"Right"}`:"marginBottom"]:visibleScrollbar?void 0:-scrollerStyle.scrollbarWidth},ref:tabsRef,onScroll:handleTabsScroll,children:[(0,_jsxRuntime.jsx)(FlexContainer,{"aria-label":ariaLabel,"aria-labelledby":ariaLabelledBy,"aria-orientation":"vertical"===orientation?"vertical":null,className:classes.flexContainer,ownerState:props,onKeyDown:event=>{const list=tabListRef.current,currentFocus=(0,_ownerDocument.default)(list).activeElement;
if("tab"===currentFocus.getAttribute("role")){var previousItemKey="horizontal"===orientation?"ArrowLeft":"ArrowUp",nextItemKey="horizontal"===orientation?"ArrowRight":"ArrowDown";"horizontal"===orientation&&isRtl&&(previousItemKey="ArrowRight",nextItemKey="ArrowLeft");switch(event.key){case previousItemKey:event.preventDefault();moveFocus(list,currentFocus,previousItem);break;case nextItemKey:event.preventDefault();moveFocus(list,currentFocus,nextItem);break;case "Home":event.preventDefault();moveFocus(list,
null,nextItem);break;case "End":event.preventDefault(),moveFocus(list,null,previousItem)}}},ref:tabListRef,role:"tablist",children:children$jscomp$0}),mounted&&indicator]}),conditionalElements.scrollButtonEnd]}))});require.propTypes={action:module.refType,allowScrollButtonsMobile:global.default.bool,"aria-label":global.default.string,"aria-labelledby":global.default.string,centered:global.default.bool,children:global.default.node,classes:global.default.object,className:global.default.string,component:global.default.elementType,
indicatorColor:global.default.oneOfType([global.default.oneOf(["primary","secondary"]),global.default.string]),onChange:global.default.func,orientation:global.default.oneOf(["horizontal","vertical"]),ScrollButtonComponent:global.default.elementType,scrollButtons:global.default.oneOf(["auto",!1,!0]),selectionFollowsFocus:global.default.bool,sx:global.default.oneOfType([global.default.arrayOf(global.default.oneOfType([global.default.func,global.default.object,global.default.bool])),global.default.func,
global.default.object]),TabIndicatorProps:global.default.object,TabScrollButtonProps:global.default.object,textColor:global.default.oneOf(["inherit","primary","secondary"]),value:global.default.any,variant:global.default.oneOf(["fullWidth","scrollable","standard"]),visibleScrollbar:global.default.bool};exports.default=require}
//# sourceMappingURL=module$node_modules$$mui$material$node$Tabs$Tabs.js.map
