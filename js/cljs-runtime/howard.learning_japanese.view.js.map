{"version":3,"sources":["howard/learning_japanese/view.cljs"],"mappings":"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","names":["re_frame.core.reg_sub","db","_","day8.re-frame.tracing/is-trace-enabled?","+debux-dbg-opts+","day8.re-frame.debux.common.util/send-form!","result__52081__auto__","day8.re-frame.debux.common.util/send-trace!","e","e60275","e60276","re_frame.core.subscribe","p__60277","map__60278","cljs.core/--destructure-map","cljs.core.get","e60279","p__60280","map__60281","current-index","data","mode","$","cljs.core.assoc","p__60282","map__60283","howard.learning-japanese.view/chinese-word-card","word","sentence","chinese","cljs.core/deref","answer-field","reagent-mui.components/card","reagent-mui.components/card-content","reagent-mui.components/typography","reagent-mui.components/box","reagent-mui.components/card-actions","reagent-mui.components/button","re-frame.core/dispatch","reagent-mui.icons.circle-notifications/circle-notifications","reagent-mui.icons.mode/mode","p__60284","map__60285","howard.learning-japanese.view/japanese-word-card","howard.learning-japanese.view/app","map__60286","reagent-mui.components/container","cljs.core._EQ_","reagent-mui.components/grid"],"sourcesContent":["(ns howard.learning-japanese.view\n  (:require\n   [day8.re-frame.tracing :refer [fn-traced]]\n   [re-frame.core :as re-frame]\n   [reagent-mui.components :refer [box button card card-actions card-content\n                                   container grid typography]]\n   [reagent-mui.icons.circle-notifications :refer [circle-notifications]]\n   [reagent-mui.icons.mode :refer [mode]]\n   [howard.learning-japanese.events :as events]))\n\n(re-frame/reg-sub\n ::card-answer-field\n (fn [db _]\n   (:word/card-answer db)))\n\n(re-frame/reg-sub\n ::get-card-data-and-index\n (fn-traced [db _]\n            {:word/card-data (:word/card-data db)\n             :word/card-mode (:word/card-mode db)\n             :word/current-index (:word/current-index db)}))\n\n(re-frame/reg-sub\n ::get-current-card-data\n (fn-traced [_]\n            (re-frame/subscribe [::get-card-data-and-index]))\n (fn-traced [{current-index :word/current-index\n              data :word/card-data\n              mode :word/card-mode} _]\n            (as-> (get data current-index) $\n              (assoc {}\n                     :word/current-data $\n                     :word/card-mode mode))))\n(defn chinese-word-card\n  \"define a word card component,\n  which can show eithor chinese or japanese\"\n  [{:keys [word sentence chinese]}]\n  (let [answer-field @(re-frame/subscribe [::card-answer-field])]\n    [card\n     [card-content\n      [typography {:variant \"h4\"} chinese]\n      (when answer-field\n        [:<>\n         [box {:component \"h3\"\n               :pt 1\n               :sx {:font-weight \"bold\"}}\n          word]\n         [box {:component \"p\"\n               :pl 2}\n          sentence]])]\n\n     [card-actions\n      [button {:on-click (fn []\n                           (re-frame/dispatch [::events/toggle-word-answer]))}\n       [circle-notifications {:font-size \"large\"}]]\n      [button {:on-click (fn []\n                           (re-frame/dispatch [::events/change-card-mode \"hide-chinese\"]))}\n       [mode {:font-size \"large\"}]]]]))\n\n(defn japanese-word-card\n  \"define a word card component,\n  which can show eithor chinese or japanese\"\n  [{:keys [word sentence chinese]}]\n  (let [answer-field @(re-frame/subscribe [::card-answer-field])]\n    [card\n     [card-content\n      [typography {:variant \"h3\"} word]\n      (when answer-field\n        [box {:component \"div\"\n              :pt 1\n              :sx {:font-weight \"bold\"}}\n         chinese])]\n     [box {:component \"p\"\n           :pl 2}\n      sentence]\n     [card-actions\n      [button {:on-click (fn []\n                           (re-frame/dispatch [::events/toggle-word-answer]))}\n       [circle-notifications {:font-size \"large\"}]]\n      [button {:on-click (fn []\n                           (re-frame/dispatch [::events/change-card-mode \"hide-japanese\"]))}\n       [mode {:font-size \"large\"}]]]]))\n\n(defn app\n  \"the root of the app\"\n  []\n  (let [{data :word/current-data\n         mode :word/card-mode} @(re-frame/subscribe [::get-current-card-data])]\n    [container {:fixed true\n                :max-width \"xs\"\n                :sx {:display \"flex\"\n                     :flex-direction \"column\"\n                     :height \"100%\"}}\n     [:div {:style {:flex 1\n                    :display \"flex\"\n                    :flex-direction \"column\"}}\n      [box {:sx {:margin \"auto 0\"}}\n       (if (= mode \"hide-chinese\")\n         [japanese-word-card data]\n         [chinese-word-card data])\n       [grid {:container true\n              :spacing 2\n              :mt 2}\n        [grid {:item true\n               :xs 6}\n         [button {:variant \"contained\"\n                  :full-width true\n                  :on-click #(re-frame/dispatch [::events/word-prev])\n                  :color \"secondary\"} \"previous\"]]\n        [grid {:item true\n               :xs 6}\n         [button {:variant \"contained\"\n                  :on-click #(re-frame/dispatch [::events/word-next])\n                  :full-width true} \"next\"]]]]]\n     [:div {:style {:flex \"0 1 50px\"\n                    :margin-bottom \"0\"}}\n      \"\"]]))\n"]}