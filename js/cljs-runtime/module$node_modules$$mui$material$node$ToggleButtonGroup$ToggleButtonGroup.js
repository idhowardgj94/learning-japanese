shadow$provide.module$node_modules$$mui$material$node$ToggleButtonGroup$ToggleButtonGroup=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;
if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,
desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _objectWithoutPropertiesLoose2=module(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")),_extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),React=_interopRequireWildcard(require("module$node_modules$react$index")),
_reactIs=require("module$node_modules$react_is$index");global=module(require("module$node_modules$prop_types$index"));var _clsx=module(require("module$node_modules$clsx$dist$clsx")),_base=require("module$node_modules$$mui$base$node$index"),_styled=module(require("module$node_modules$$mui$material$node$styles$styled")),_useThemeProps=module(require("module$node_modules$$mui$material$node$styles$useThemeProps")),_capitalize=module(require("module$node_modules$$mui$material$node$utils$capitalize")),
_isValueSelected=module(require("module$node_modules$$mui$material$node$ToggleButtonGroup$isValueSelected")),_toggleButtonGroupClasses=_interopRequireWildcard(require("module$node_modules$$mui$material$node$ToggleButtonGroup$toggleButtonGroupClasses")),_jsxRuntime=require("module$node_modules$react$jsx_runtime");const _excluded="children className color disabled exclusive fullWidth onChange orientation size value".split(" "),useUtilityClasses=ownerState=>{const {classes,orientation,fullWidth,disabled}=
ownerState;ownerState={root:["root","vertical"===orientation&&"vertical",fullWidth&&"fullWidth"],grouped:["grouped",`grouped${(0,_capitalize.default)(orientation)}`,disabled&&"disabled"]};return(0,_base.unstable_composeClasses)(ownerState,_toggleButtonGroupClasses.getToggleButtonGroupUtilityClass,classes)},ToggleButtonGroupRoot=(0,_styled.default)("div",{name:"MuiToggleButtonGroup",slot:"Root",overridesResolver:(props,styles)=>{({ownerState:props}=props);return[{[`& .${_toggleButtonGroupClasses.default.grouped}`]:styles.grouped},
{[`& .${_toggleButtonGroupClasses.default.grouped}`]:styles[`grouped${(0,_capitalize.default)(props.orientation)}`]},styles.root,"vertical"===props.orientation&&styles.vertical,props.fullWidth&&styles.fullWidth]}})(({ownerState,theme})=>(0,_extends2.default)({display:"inline-flex",borderRadius:(theme.vars||theme).shape.borderRadius},"vertical"===ownerState.orientation&&{flexDirection:"column"},ownerState.fullWidth&&{width:"100%"},{[`& .${_toggleButtonGroupClasses.default.grouped}`]:(0,_extends2.default)({},
"horizontal"===ownerState.orientation?{"\x26:not(:first-of-type)":{marginLeft:-1,borderLeft:"1px solid transparent",borderTopLeftRadius:0,borderBottomLeftRadius:0},"\x26:not(:last-of-type)":{borderTopRightRadius:0,borderBottomRightRadius:0},[`&.${_toggleButtonGroupClasses.default.selected} + .${_toggleButtonGroupClasses.default.grouped}.${_toggleButtonGroupClasses.default.selected}`]:{borderLeft:0,marginLeft:0}}:{"\x26:not(:first-of-type)":{marginTop:-1,borderTop:"1px solid transparent",borderTopLeftRadius:0,
borderTopRightRadius:0},"\x26:not(:last-of-type)":{borderBottomLeftRadius:0,borderBottomRightRadius:0},[`&.${_toggleButtonGroupClasses.default.selected} + .${_toggleButtonGroupClasses.default.grouped}.${_toggleButtonGroupClasses.default.selected}`]:{borderTop:0,marginTop:0}})}));require=React.forwardRef(function(inProps,ref){var props=(0,_useThemeProps.default)({props:inProps,name:"MuiToggleButtonGroup"});const {children,className,color="standard",disabled=!1,exclusive=!1,fullWidth=!1,onChange,orientation=
"horizontal",size="medium",value}=props;inProps=(0,_objectWithoutPropertiesLoose2.default)(props,_excluded);props=(0,_extends2.default)({},props,{disabled,fullWidth,orientation,size});const classes=useUtilityClasses(props),handleChange=(event,buttonValue)=>{if(onChange){var index=value&&value.indexOf(buttonValue);value&&0<=index?(buttonValue=value.slice(),buttonValue.splice(index,1)):buttonValue=value?value.concat(buttonValue):[buttonValue];onChange(event,buttonValue)}},handleExclusiveChange=(event,
buttonValue)=>{onChange&&onChange(event,value===buttonValue?null:buttonValue)};return(0,_jsxRuntime.jsx)(ToggleButtonGroupRoot,(0,_extends2.default)({role:"group",className:(0,_clsx.default)(classes.root,className),ref,ownerState:props},inProps,{children:React.Children.map(children,child=>{if(!React.isValidElement(child))return null;(0,_reactIs.isFragment)(child)&&console.error("MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\nConsider providing an array instead.");return React.cloneElement(child,
{className:(0,_clsx.default)(classes.grouped,child.props.className),onChange:exclusive?handleExclusiveChange:handleChange,selected:void 0===child.props.selected?(0,_isValueSelected.default)(child.props.value,value):child.props.selected,size:child.props.size||size,fullWidth,color:child.props.color||color,disabled:child.props.disabled||disabled})})}))});require.propTypes={children:global.default.node,classes:global.default.object,className:global.default.string,color:global.default.oneOfType([global.default.oneOf("standard primary secondary error info success warning".split(" ")),
global.default.string]),disabled:global.default.bool,exclusive:global.default.bool,fullWidth:global.default.bool,onChange:global.default.func,orientation:global.default.oneOf(["horizontal","vertical"]),size:global.default.oneOfType([global.default.oneOf(["small","medium","large"]),global.default.string]),sx:global.default.oneOfType([global.default.arrayOf(global.default.oneOfType([global.default.func,global.default.object,global.default.bool])),global.default.func,global.default.object]),value:global.default.any};
exports.default=require}
//# sourceMappingURL=module$node_modules$$mui$material$node$ToggleButtonGroup$ToggleButtonGroup.js.map
