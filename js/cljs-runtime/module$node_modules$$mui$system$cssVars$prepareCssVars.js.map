{
"version":3,
"file":"module$node_modules$$mui$system$cssVars$prepareCssVars.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG/GC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAC7BI,OAAOC,CAAAA,cAAP,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAQK,CAAAA,OAAR,CAAkB,IAAK,EACvB,KAAIC,+BAAiCL,MAAA,CAAuBH,OAAA,CAAQ,yEAAR,CAAvB,CAArC,CACIS,OAAST,OAAA,CAAQ,sCAAR,CADb,CAEIU,eAAiBP,MAAA,CAAuBH,OAAA,CAAQ,uDAAR,CAAvB,CAV8F;MAW7GW,UAAY,CAAC,cAAD,CAAiB,YAAjB,CAXiG,CAYjHC,WAAa,CAAC,OAAD,CA0DfV,QAAQK,CAAAA,OAAR,CAzDAM,QAAuB,CAACC,KAAD,CAAQC,YAAR,CAAsB,CAAA,IAErC,CACFC,YAAA,CAAe,EADb,CAAA,CAEAF,KACJG,MAAAA,CAAa,GAAIT,8BAA+BD,CAAAA,OAAnC,EAA4CO,KAA5C,CAAmDH,SAAnD,CACf,OAAM,CACJ,KAAMO,QADF,CAEJ,IAAKC,OAFD,CAGJ,iBAAkBC,oBAHd,CAAA,CAIF,GAAIV,cAAeH,CAAAA,OAAnB,EAA4BU,KAA5B,CAAwCF,YAAxC,CACJ,KAAIM,UAAYD,oBAChB,OAAME,gBAAkB,EAZmB,EAarC,CACF,MAAAC,KADE,CAbqC,CAerCP,YAfqC,CAgBzCQ,aAAAA,CAAoB,GAAIhB,8BAA+BD,CAAAA,OAAnC,EAA4CS,YAA5C,CAA0DJ,UAA1D,CACtBR,OAAOqB,CAAAA,OAAP,CAAeD,YAAf;AAAoC,EAApC,CAAwCE,CAAAA,OAAxC,CAAgD,CAAC,CAACC,GAAD,CAAMC,MAAN,CAAD,CAAA,EAAmB,CACjE,MAAM,CACJC,IADI,CAEJC,GAFI,CAGJC,gBAHI,CAAA,CAIF,GAAIrB,cAAeH,CAAAA,OAAnB,EAA4BqB,MAA5B,CAAoCb,YAApC,CACJM,UAAA,CAAY,GAAIZ,MAAOuB,CAAAA,SAAX,EAAsBX,SAAtB,CAAiCU,gBAAjC,CACZT,gBAAA,CAAgBK,GAAhB,CAAA,CAAuB,CACrBG,GADqB,CAErBD,IAFqB,CAP0C,CAAnE,CAYA,IAAIN,KAAJ,CAAW,CAET,MAAM,CACJO,GADI,CAEJD,IAFI,CAGJE,gBAHI,CAAA,CAIF,GAAIrB,cAAeH,CAAAA,OAAnB,EAA4BgB,KAA5B,CAAmCR,YAAnC,CACJM,UAAA,CAAY,GAAIZ,MAAOuB,CAAAA,SAAX,EAAsBX,SAAtB,CAAiCU,gBAAjC,CACZT,gBAAgBC,CAAAA,KAAhB,CAAwB,CACtBO,GADsB,CAEtBD,IAFsB,CARf,CAsBX,MAAO,CACLA,KAAMR,SADD,CAELY,gBAXsBC,WAAAD,EACjBC,WAAL,CAMOZ,eAAA,CAAgBY,WAAhB,CANP,CACS,CACLJ,IAAKX,OADA,CAELU,KAAMX,QAFD,CAOJ,CAnDoC,CAbsE;",
"sources":["node_modules/@mui/system/cssVars/prepareCssVars.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$mui$system$cssVars$prepareCssVars\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _utils = require(\"@mui/utils\");\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\nconst _excluded = [\"colorSchemes\", \"components\"],\n  _excluded2 = [\"light\"];\nfunction prepareCssVars(theme, parserConfig) {\n  // @ts-ignore - ignore components do not exist\n  const {\n      colorSchemes = {}\n    } = theme,\n    otherTheme = (0, _objectWithoutPropertiesLoose2.default)(theme, _excluded);\n  const {\n    vars: rootVars,\n    css: rootCss,\n    varsWithDefaults: rootVarsWithDefaults\n  } = (0, _cssVarsParser.default)(otherTheme, parserConfig);\n  let themeVars = rootVarsWithDefaults;\n  const colorSchemesMap = {};\n  const {\n      light\n    } = colorSchemes,\n    otherColorSchemes = (0, _objectWithoutPropertiesLoose2.default)(colorSchemes, _excluded2);\n  Object.entries(otherColorSchemes || {}).forEach(([key, scheme]) => {\n    const {\n      vars,\n      css,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(scheme, parserConfig);\n    themeVars = (0, _utils.deepmerge)(themeVars, varsWithDefaults);\n    colorSchemesMap[key] = {\n      css,\n      vars\n    };\n  });\n  if (light) {\n    // light color scheme vars should be merged last to set as default\n    const {\n      css,\n      vars,\n      varsWithDefaults\n    } = (0, _cssVarsParser.default)(light, parserConfig);\n    themeVars = (0, _utils.deepmerge)(themeVars, varsWithDefaults);\n    colorSchemesMap.light = {\n      css,\n      vars\n    };\n  }\n  const generateCssVars = colorScheme => {\n    if (!colorScheme) {\n      return {\n        css: rootCss,\n        vars: rootVars\n      };\n    }\n    return colorSchemesMap[colorScheme];\n  };\n  return {\n    vars: themeVars,\n    generateCssVars\n  };\n}\nvar _default = prepareCssVars;\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","Object","defineProperty","value","default","_objectWithoutPropertiesLoose2","_utils","_cssVarsParser","_excluded","_excluded2","prepareCssVars","theme","parserConfig","colorSchemes","otherTheme","rootVars","rootCss","rootVarsWithDefaults","themeVars","colorSchemesMap","light","otherColorSchemes","entries","forEach","key","scheme","vars","css","varsWithDefaults","deepmerge","generateCssVars","colorScheme"]
}
